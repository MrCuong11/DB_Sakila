-- Level 1:
-- Write a SQL query to return the first and last names of all actors in the database.
select first_name, last_name 
from actor;

-- Write a SQL query to return the titles of all films in the database, along with their rental rates and replacement costs.
select title, rental_rate, replacement_cost
from film;


-- Write a SQL query to return the top 5 most rented films in the database, along with the number of times they have been rented.
-- Từ film_id → tìm tất cả inventory_id tương ứng
-- Rồi đếm tất cả rental_id ứng với các inventory_id đó
-- groupBy giúp gom lượt thuê lại theo title 
SELECT f.title, COUNT(r.rental_id) AS rental_count
FROM film f
JOIN inventory i ON f.film_id = i.film_id
JOIN rental r ON i.inventory_id = r.inventory_id
GROUP BY f.title
ORDER BY rental_count DESC
LIMIT 5;



-- Write a SQL query to return the average rental duration for each category of film in the database.
-- Lấy category name rồi lấy các bộ phim từ category đó; mỗi phim lấy giá trị rental_duration rồi tính giá trị trung bình rồi sắp xếp giảm
SELECT c.name AS category_name, AVG(f.rental_duration) AS avg_rental_duration
FROM category c
JOIN film_category fc ON c.category_id = fc.category_id
JOIN film f ON fc.film_id = f.film_id
GROUP BY c.name
ORDER BY avg_rental_duration DESC;





-- Write a SQL query to return the names and addresses of all customers who have rented a film in the month of January 2022.
-- join với rental bằng customer_id để xem rental_date
-- join với address để lấy địa chỉ
SELECT
    c.first_name,
    c.last_name,
    a.address
FROM
    customer c
JOIN address a ON c.address_id = a.address_id
JOIN rental r ON c.customer_id = r.customer_id
WHERE
    r.rental_date >= '2022-01-01'
    AND r.rental_date < '2022-02-01'
GROUP BY
    c.customer_id, c.first_name, c.last_name, a.address;



-- Write a SQL query to return the revenue generated by each store in the database for the year 2021.
-- từ bảng payment, get ra amount và get ra customer_id tương ứng, join với customer để biết customer đó thuộc cửa hàng nào, rồi join với store

SELECT
    s.store_id,
    SUM(p.amount) AS total_revenue
FROM
    payment p
JOIN customer c ON p.customer_id = c.customer_id
JOIN store s ON c.store_id = s.store_id
WHERE
    p.payment_date >= '2021-01-01'
    AND p.payment_date < '2022-01-01'
GROUP BY
    s.store_id;



-- Write a SQL query to return the names of all actors who have appeared in more than 20 films in the database.
-- từ bảng actor join sang bảng film_actor để biết actor đóng bao nhiêu film 
-- group by loại bỏ các dòng trùng nhau
-- having > 20 để lấy actor đóng > 20 film
SELECT
    a.first_name,
    a.last_name,
    COUNT(fa.film_id) AS film_count
FROM
    actor a
JOIN
    film_actor fa ON a.actor_id = fa.actor_id
GROUP BY
    a.actor_id, a.first_name, a.last_name
HAVING
    COUNT(fa.film_id) > 20 
ORDER BY
    film_count desc;




-- Write a SQL query to return the titles of all films in the database that have a rating of 'PG-13' and a length of more than 120 minutes.

SELECT 
    title, 
    rating, 
    length
FROM 
    film
WHERE 
    rating = 'PG-13'
    AND length > 120;






